// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ----------------------------------------------
// 1. ส่วนของ NextAuth.js (ตามมาตรฐาน)
// ----------------------------------------------

// Enum สำหรับ Role (ปรับปรุงใหม่)
enum Role {
  USER  // สำหรับผู้ใช้ทั่วไป หรือ ลูกค้า
  ADMIN // สำหรับผู้ดูแลระบบ (ไว้เพิ่ม Blog)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER) // ค่าเริ่มต้นคือ USER
  accounts      Account[]
  sessions      Session[]

  // ความสัมพันธ์: User เป็นผู้เขียน Post (Author)
  posts         Post[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ----------------------------------------------
// 2. ส่วนของ Blog (ออกแบบเพื่อ SEO)
// ----------------------------------------------

model Post {
  id              String    @id @default(cuid())
  title           String
  slug            String    @unique // Slug ที่ไม่ซ้ำกัน สำคัญมากสำหรับ SEO
  content         String    @db.Text
  published       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // ----- ฟิลด์สำหรับ SEO -----
  metaTitle       String?   // สำหรับ <title> tag โดยเฉพาะ
  metaDescription String?   // สำหรับ <meta name="description">
  canonicalUrl    String?   // ถ้าต้องการระบุ Canonical URL

  // ----- ความสัมพันธ์ -----
  authorId        String
  author          User      @relation(fields: [authorId], references: [id])
  
  categoryId      String
  category        Category  @relation(fields: [categoryId], references: [id])

  tags            Tag[]     // ความสัมพันธ์ Many-to-Many กับ Tags
}

model Category {
  id    String  @id @default(cuid())
  name  String
  slug  String  @unique // Slug สำหรับ URL ที่สวยงาม (e.g., /category/tech)
  
  posts Post[]  // หนึ่ง Category มีได้หลาย Post
}

model Tag {
  id    String  @id @default(cuid())
  name  String
  slug  String  @unique // Slug สำหรับ URL ที่สวยงาม (e.g., /tag/nextjs)

  posts Post[]  // หนึ่ง Tag มีได้หลาย Post (Many-to-Many)
}

// ----------------------------------------------
// 3. ส่วนของ E-commerce (สินค้า)
// ----------------------------------------------

// หมวดหมู่สินค้า (Streetwear, Sportswear, Luxury)
model ProductCategory {
  id          String    @id @default(cuid())
  name        String    // เช่น "Streetwear", "Sportswear", "Luxury"
  slug        String    @unique // Slug สำหรับ URL (e.g., /category/streetwear)
  description String?   @db.Text
  imageUrl    String?   // รูปภาพหมวดหมู่
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  products    Product[]
}

// แบรนด์สินค้า (Nike, Adidas, Supreme, etc.)
model Brand {
  id          String    @id @default(cuid())
  name        String    // เช่น "Nike", "Adidas", "Supreme"
  slug        String    @unique
  description String?   @db.Text
  logoUrl     String?   // โลโก้แบรนด์
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  products    Product[]
}

// สินค้า
model Product {
  id              String    @id @default(cuid())
  name            String    // ชื่อสินค้า เช่น "Nike Air Max 90"
  slug            String    @unique // Slug สำหรับ URL (e.g., /product/nike-air-max-90)
  description     String?   @db.Text
  price           Decimal   @db.Decimal(10, 2) // ราคา
  compareAtPrice  Decimal?  @db.Decimal(10, 2) // ราคาเปรียบเทียบ (ก่อนลดราคา)
  sku             String?   @unique // Stock Keeping Unit
  
  // รูปภาพ
  imageUrl        String    // รูปภาพหลัก
  images          String?   @db.Text // JSON array ของรูปภาพเพิ่มเติม
  
  // สต็อก
  stock           Int       @default(0)
  inStock         Boolean   @default(true)
  
  // SEO
  metaTitle       String?
  metaDescription String?
  
  // สถานะ
  featured        Boolean   @default(false) // สินค้าแนะนำ
  published       Boolean   @default(true)
  
  // ความสัมพันธ์
  categoryId      String
  category        ProductCategory @relation(fields: [categoryId], references: [id])
  
  brandId         String
  brand           Brand     @relation(fields: [brandId], references: [id])
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  @@index([categoryId])
  @@index([brandId])
  @@index([featured])
}